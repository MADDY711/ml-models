#SVM 

import pandas as pd
import numpy as np
from sklearn.svm import SVR
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, mean_absolute_error

# Load dataset from CSV file
def load_data(csv_file):
    df = pd.read_csv(csv_file)
    # Assuming 'features' contains all the features except coordinates
    X = df.drop(['x', 'y', 'density'], axis=1).values
    y = df['density'].values
    return X, y

# Load dataset
csv_file = 'your_data.csv'
X, y = load_data(csv_file)

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train SVR model
model = SVR(kernel='rbf')
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
print("Mean Squared Error:", mse)
print("Mean Absolute Error:", mae)
